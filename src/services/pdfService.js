// First, install the required dependencies:
// npm install jspdf html2canvas

// src/services/pdfService.js
import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';

export const generatePDF = async (elementId, filename = 'customer-lines.pdf', language = 'en') => {
  try {
    const element = document.getElementById(elementId);
    if (!element) {
      throw new Error('Element not found');
    }

    // Configure html2canvas options
    const canvas = await html2canvas(element, {
      scale: 2,
      useCORS: true,
      allowTaint: true,
      backgroundColor: '#ffffff',
      width: element.scrollWidth,
      height: element.scrollHeight,
    });

    const imgData = canvas.toDataURL('image/png');
    
    // Calculate dimensions
    const imgWidth = 210; // A4 width in mm
    const pageHeight = 295; // A4 height in mm
    const imgHeight = (canvas.height * imgWidth) / canvas.width;
    let heightLeft = imgHeight;

    // Create PDF
    const pdf = new jsPDF('p', 'mm', 'a4');
    let position = 0;

    // Add first page
    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
    heightLeft -= pageHeight;

    // Add additional pages if needed
    while (heightLeft >= 0) {
      position = heightLeft - imgHeight;
      pdf.addPage();
      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
      heightLeft -= pageHeight;
    }

    // Add metadata
    pdf.setProperties({
      title: language === 'ar' ? 'قائمة أرقام العميل' : 'Customer Lines List',
      subject: language === 'ar' ? 'أرقام الهواتف المسجلة' : 'Registered Phone Numbers',
      author: 'Zain',
      creator: 'Zain Customer Portal'
    });

    // Save the PDF
    pdf.save(filename);
    
    return true;
  } catch (error) {
    console.error('Error generating PDF:', error);
    throw new Error('Failed to generate PDF');
  }
};

export const generateAdvancedPDF = (data, language = 'en') => {
  try {
    const pdf = new jsPDF('p', 'mm', 'a4');
    const pageWidth = pdf.internal.pageSize.width;
    const pageHeight = pdf.internal.pageSize.height;
    
    // Set font for Arabic support (you might need to add Arabic font)
    pdf.setFont('helvetica');
    
    // Header
    pdf.setFontSize(20);
    pdf.setTextColor(28, 55, 129); // Zain blue
    
    const title = language === 'ar' ? 'قائمة أرقام العميل' : 'Customer Lines List';
    const titleWidth = pdf.getTextWidth(title);
    pdf.text(title, (pageWidth - titleWidth) / 2, 30);
    
    // Date
    pdf.setFontSize(10);
    pdf.setTextColor(0, 0, 0);
    const date = new Date().toLocaleDateString(language === 'ar' ? 'ar-JO' : 'en-US');
    pdf.text(`${language === 'ar' ? 'التاريخ:' : 'Date:'} ${date}`, 20, 45);
    
    // Table headers
    let yPosition = 60;
    pdf.setFontSize(12);
    pdf.setTextColor(255, 255, 255);
    pdf.setFillColor(28, 55, 129);
    
    const headers = language === 'ar' 
      ? ['رقم الهاتف', 'نوع الخدمة', 'نوع العقد']
      : ['Phone Number', 'Service Type', 'Contract Type'];
    
    // Draw header row
    pdf.rect(20, yPosition - 5, 170, 10, 'F');
    pdf.text(headers[0], 25, yPosition);
    pdf.text(headers[1], 80, yPosition);
    pdf.text(headers[2], 135, yPosition);
    
    yPosition += 15;
    
    // Table data
    pdf.setTextColor(0, 0, 0);
    pdf.setFontSize(10);
    
    data.forEach((item, index) => {
      if (yPosition > pageHeight - 30) {
        pdf.addPage();
        yPosition = 30;
      }
      
      const msisdn = item.msisdn;
      const market = language === 'ar' ? item.aR_Market : item.eN_Market;
      const contractType = language === 'ar' ? item.aR_ContractType : item.eN_ContractType;
      
      // Alternate row colors
      if (index % 2 === 0) {
        pdf.setFillColor(248, 249, 250);
        pdf.rect(20, yPosition - 5, 170, 10, 'F');
      }
      
      pdf.text(msisdn, 25, yPosition);
      pdf.text(market, 80, yPosition);
      pdf.text(contractType, 135, yPosition);
      
      yPosition += 10;
    });
    
    // Footer
    pdf.setFontSize(8);
    pdf.setTextColor(128, 128, 128);
    const footer = language === 'ar' 
      ? 'تم إنشاؤها بواسطة بوابة زين للعملاء'
      : 'Generated by Zain Customer Portal';
    const footerWidth = pdf.getTextWidth(footer);
    pdf.text(footer, (pageWidth - footerWidth) / 2, pageHeight - 10);
    
    // Save
    const filename = language === 'ar' 
      ? 'قائمة-أرقام-العميل.pdf'
      : 'customer-lines-list.pdf';
    pdf.save(filename);
    
    return true;
  } catch (error) {
    console.error('Error generating advanced PDF:', error);
    throw new Error('Failed to generate PDF');
  }
};